name: Multi-Platform Release
on:
    push:
        branches:
            - main
            - dev
            - develop
    workflow_dispatch:

env:
    FORCE_COLOR: true

permissions: write-all

jobs:
    build-matrix:
        name: Build BestCord (${{ matrix.platform }})
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                include:
                    - platform: linux-x64
                      os: ubuntu-latest
                      target: linux-x64
                    - platform: windows-x64
                      os: windows-latest
                      target: win32-x64
                    - platform: macos-x64
                      os: macos-latest
                      target: darwin-x64
                    - platform: macos-arm64
                      os: macos-latest
                      target: darwin-arm64

        steps:
            - uses: actions/checkout@v4

            - uses: pnpm/action-setup@v3

            - name: Use Node.js 20
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "pnpm"

            - name: Install dependencies
              run: pnpm install --no-frozen-lockfile

            - name: Build for ${{ matrix.platform }}
              run: |
                  pnpm buildStandalone
                  pnpm buildWebStandalone

            - name: Package platform-specific builds
              shell: bash
              run: |
                  mkdir -p artifacts
                  platform="${{ matrix.platform }}"
                  
                  # Desktop builds
                  if [ -f "dist/desktop.asar" ]; then
                    cp "dist/desktop.asar" "artifacts/BestCord-Desktop-${platform}.asar"
                  fi
                  
                  if [ -f "dist/vesktop.asar" ]; then
                    cp "dist/vesktop.asar" "artifacts/BestCord-Vesktop-${platform}.asar"
                  fi
                  
                  # Browser extension (indépendant de la plateforme mais on le génère une fois)
                  if [ "$platform" = "linux-x64" ] && [ -d "dist/browser" ]; then
                    cd dist/browser
                    zip -r "../../artifacts/BestCord-Browser-Extension.zip" .
                    cd ../..
                  fi
                  
                  # Userscripts (indépendant de la plateforme)
                  if [ "$platform" = "linux-x64" ]; then
                    if [ -f "dist/Vencord.user.js" ]; then
                      cp "dist/Vencord.user.js" "artifacts/BestCord-Userscript.js"
                    fi
                    if [ -f "dist/Vencord.user.js.LEGAL.txt" ]; then
                      cp "dist/Vencord.user.js.LEGAL.txt" "artifacts/BestCord-Userscript.js.LEGAL.txt"
                    fi
                  fi

            - name: Upload artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: bestcord-${{ matrix.platform }}
                  path: artifacts/*

    release:
        name: Create Release with All Assets
        needs: build-matrix
        runs-on: ubuntu-latest
        if: github.event_name == 'push'

        steps:
            - uses: actions/checkout@v4

            - name: Download all artifacts
              uses: actions/download-artifact@v4
              with:
                  path: all-artifacts

            - name: Collect all files
              run: |
                  mkdir -p release-assets
                  
                  # Copier tous les artifacts
                  find all-artifacts -type f -exec cp {} release-assets/ \;
                  
                  # Générer les checksums
                  cd release-assets
                  sha256sum * > checksums.txt
                  
                  # Lister tous les fichiers qui seront uploadés
                  echo "Files to be released:"
                  ls -la

            - name: Create Release
              run: |
                  if [[ "${{ github.ref_name }}" == "main" ]]; then
                    release_tag="multiplatform-latest"
                    release_title="BestCord Multi-Platform - Build #${{ github.run_number }}"
                    prerelease="false"
                  else
                    release_tag="multiplatform-${{ github.ref_name }}"
                    release_title="BestCord Multi-Platform ${{ github.ref_name }} - Build #${{ github.run_number }}"
                    prerelease="true"
                  fi
                  
                  # Créer la release
                  gh release create "$release_tag" \
                    --title "$release_title" \
                    --prerelease="$prerelease" \
                    --notes "BestCord Multi-Platform Build - The other cutest Discord client mod
                    
                    ## Assets inclus:
                    - Extensions navigateur (.zip)
                    - Builds desktop pour Linux x64, Windows x64, macOS x64/ARM64 (.asar)
                    - Userscripts (.js)
                    - Checksums de vérification
                    
                    Téléchargez le fichier correspondant à votre plateforme." \
                    --draft=false
                  
                  # Upload tous les assets
                  gh release upload "$release_tag" release-assets/*
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 